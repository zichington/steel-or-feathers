{"version":3,"sources":["components/Title/Title.js","components/Score/Score.js","components/Lives/Lives.js","components/Footer/Footer.js","components/Steel/Steel.js","components/Image/Image.js","components/Feathers/Feathers.js","components/Answer/Answer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","Score","className","Lives","src","alt","Footer","Steel","_ref","steelData","winner","console","log","id","image","name","Image","pkmnData","Feathers","flyingData","flyingDivs","onClick","Array","from","map","x","index","Image_Image","key","Answer","App","_useState","useState","steel","flying","_useState2","Object","slicedToArray","setPkmnData","_useState3","_useState4","setFlyingDivs","_useState5","_useState6","setWinner","useEffect","decideWinner","fetchPkmnUrl","calculateImgs","Math","floor","random","asyncToGenerator","regenerator_default","mark","_callee","type","url","res","response","choice","pokemon","detailUrl","wrap","_context","prev","next","concat","fetch","sent","json","length","fetchPkmnData","t0","stop","_x","apply","this","arguments","_ref2","_callee2","result","_context2","weight","sprites","front_default","objectSpread","defineProperty","fetchFormSprite","forms","alert","_x2","_x3","_ref3","_callee3","_context3","_x4","_x5","steelWeight","flyingWeight","warn","Title_Title","Steel_Steel","Feathers_Feathers","Answer_Answer","Score_Score","Lives_Lives","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a899469f.chunk.js","sourcesContent":["import React from 'react';\nfunction Title() {\n  return (\n    <div>\n      <h1>Steel or Feathers?</h1>\n      <p>which is heavier?</p>\n    </div>\n  )\n}\n\nexport default Title","import React from 'react';\nfunction Score() {\n  return (\n    <div className=\"score-container\">\n      <div>\n        <p>Score</p>\n      </div>\n      <div>\n        <p>0</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Score","import React from 'react';\nfunction Lives() {\n  return (\n    <div className=\"lives-container\">\n      <div>\n        <p>Lives</p>\n      </div>\n      <div className=\"lives-hearts-container\">\n        <img src=\"https://img.icons8.com/cotton/2x/like--v1.png\" alt=\"\" />\n        <img src=\"https://img.icons8.com/cotton/2x/like--v1.png\" alt=\"\" />\n        <img src=\"https://img.icons8.com/cotton/2x/like--v1.png\" alt=\"\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Lives","import React from 'react';\nfunction Footer() {\n  return (\n    <div>\n      Made by Zichao Zang\n      <button>tweet this</button>\n      <button>github</button>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react';\nfunction Steel({steelData, winner}) {\n  console.log('steelData', steelData)\n\n  return (\n    <button id=\"steel-btn\">\n    <img className=\"pokemon-img\" src={steelData.image} alt=\"\"/>\n    <div className=\"pokemon-btn-desciption\">\n      <p>One <b>{steelData.name}</b></p>\n    </div>\n  </button>\n  )\n}\n\nexport default Steel\n\n","import React from 'react';\nfunction Image({pkmnData}) {\n  return (\n    <img className=\"pokemon-img\" src={pkmnData.image} alt=\"\" />\n  )\n}\n\nexport default Image\n\n","import React from 'react';\nimport Image from '../Image/Image';\n\nfunction Feathers({flyingData, winner, flyingDivs}) {\n  console.log('winner', winner, 'flyingDivs',flyingDivs)\n  const showWinner = () => {\n    console.log('firing')\n  }\n  return (\n    <button id=\"feathers-btn\" onClick={showWinner}>\n    <div className=\"feathers-container\">\n      {Array.from(Array(flyingDivs)).map((x, index) => <Image key={index} pkmnData={flyingData}/>)}\n    </div>\n    \n    {/* feathers description */}\n    <div className=\"pokemon-btn-desciption\">\n    <p>{flyingDivs} <b>{flyingData.name}</b></p>\n    </div>\n  </button>\n  )\n}\n\nexport default Feathers\n\n","import React from 'react';\nfunction Answer() {\n  return (\n    <div id=\"answer\" className=\"answer\">\n      One Onix is as heavy as <b>10.14</b> Altarias!\n    <button id=\"progress\">Next</button>\n    </div>\n  )\n}\n\nexport default Answer\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Title from '../Title/Title';\nimport Score from '../Score/Score';\nimport Lives from '../Lives/Lives';\nimport Footer from '../Footer/Footer';\nimport Steel from '../Steel/Steel';\nimport Feathers from '../Feathers/Feathers';\nimport Answer from '../Answer/Answer';\n\nfunction App() {\n  const [pkmnData, setPkmnData] = useState({steel: {}, flying: {}})\n  const [flyingDivs, setFlyingDivs] = useState(0)\n  const [winner, setWinner] = useState(0) // +1 for steel losing, -1 for steel winning\n\n  useEffect(() => { \n    decideWinner()\n    fetchPkmnUrl('steel')\n    fetchPkmnUrl('flying')\n  }, [])\n\n  useEffect(() => {\n    calculateImgs()\n  }, [pkmnData])\n\n  const decideWinner = () => {\n    let winner = (Math.floor(Math.random() * 2) === 0) ? -1 : +1\n    setWinner(winner)\n  }\n\n  // type agnostic \n  const fetchPkmnUrl = async (type) => {\n    let url = `https://pokeapi.co/api/v2/type/${type}`\n    console.log('pkmn requestURL:', url)\n    try {\n      let res = await fetch(url)\n      let response = await res.json()\n      \n      // choose pokemon in arr\n      let choice = Math.floor(response.pokemon.length * Math.random())\n      let pokemon = response.pokemon[choice].pokemon.name\n      let detailUrl = response.pokemon[choice].pokemon.url\n\n      console.log(choice, pokemon, detailUrl)\n      fetchPkmnData(type, detailUrl)\n\n    } catch(error) {\n      console.log('error', error)\n    }\n  }\n\n  const fetchPkmnData = async (type, url) => {\n    try {\n      console.log('steel/flying type = ', type);\n      let res = await fetch(url)\n      let response = await res.json()\n      let result = {\n        name: response.name,\n        weight: response.weight,\n        image: response.sprites.front_default\n      }\n      setPkmnData(pkmnData => {return {...pkmnData, [type]: result}} )\n\n      if (response.sprites.front_default === null) {\n        fetchFormSprite(type,response.forms[0].url) \n      }\n\n      if (response.weight === null) {\n        alert('issue fetching weight', )\n      }\n\n    } catch(error) {\n      console.log('error', error)\n    }\n  }\n\n  const fetchFormSprite = async (type, url) => {\n    try {\n      let res = await fetch(url)\n      let response = await res.json()\n      let image = response.sprites.front_default\n      setPkmnData(pkmnData => {return {...pkmnData, [type]: {...pkmnData[type], image}}} )\n    } catch(error) {\n      console.log('error', error)\n    }\n  }\n\n  const calculateImgs = () => {\n    let steelWeight = pkmnData.steel.weight\n    let flyingWeight = pkmnData.flying.weight\n\n    if (steelWeight >= flyingWeight) { // handle normal winning logic\n      // calculation to get total number of featherDivs\n      console.log('CalculateImgs: this is being fired')\n      let flyingDivs = Math.floor(pkmnData.steel.weight / pkmnData.flying.weight) + winner\n      setFlyingDivs(flyingDivs)\n      \n    } else if (flyingWeight > steelWeight) {\n      console.warn('write logic for this case')\n      setFlyingDivs(1)\n    } else {\n      console.log('big error')\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Title />\n\n      <div className=\"main\"> \n        <div className=\"pokemon-container\">\n          { !pkmnData.steel ? null :\n            <div>\n              <Steel steelData={pkmnData.steel} winner={winner}/>\n            </div>\n\n          }\n          { !pkmnData.flying ? null :\n            <div>\n              <Feathers flyingData={pkmnData.flying} winner={winner} flyingDivs={flyingDivs}/>\n            </div>\n          }\n        </div>\n        <Answer />\n      </div>\n\n      <div className=\"game-container\">\n        <Score />\n        <Lives />\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}